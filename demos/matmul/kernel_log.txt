Compiling kernel:
extern "C" __global__ void kernel_name(float* a, float* b, float* c, float* d) {
	int loop_f = blockIdx.x;
	float* g = b + (14336*loop_f);
	float* h = d + (4096*loop_f);
	int loop_i = blockIdx.y;
	float* j = a + loop_i;
	float* k = h + loop_i;
	float l[1] = {0.0};
	#pragma unroll
	for (int load = 0; load < 1; ++load) {
		l[0] = *(c + 0);
	}
	for (int loop_m = 0; loop_m < 14336; ++loop_m) {
		float* n = g + loop_m;
		float* o = j + (4096*loop_m);
		float p = *n * *o;
		float q = *l + p;
		*l = q;
	}
	*k = *l;
}

Compiling kernel:
extern "C" __global__ void kernel_name(float* a, float* b, float* c) {
	int loop_e = blockIdx.x;
	float* f = c + (14336*loop_e);
	int loop_g = blockIdx.y;
	float* h = b + loop_g;
	float* i = a + loop_g;
	float* j = f + loop_g;
	float k = *h * *i;
	*j = k;
}

Compiling kernel:
extern "C" __global__ void kernel_name(float* a, float* b, float* c) {
	int loop_e = blockIdx.y;
	float* f = b + (114688*loop_e);
	float* g = c + loop_e;
	float h[1] = {0.0};
	#pragma unroll
	for (int load = 0; load < 1; ++load) {
		h[0] = *(a + 0);
	}
	for (int loop_i = 0; loop_i < 4096; ++loop_i) {
		float* j = f + loop_i;
		float k = *h + *j;
		*h = k;
	}
	*g = *h;
}

Compiling kernel:
extern "C" __global__ void kernel_name(float* a, float* b, float* c) {
	int loop_e = blockIdx.x;
	float* f = b + (4096*loop_e);
	int loop_g = blockIdx.y;
	float* h = a + loop_g;
	float* i = c + (114688*loop_g);
	int loop_j = blockIdx.z;
	float* k = h + (14336*loop_j);
	float* l = f + loop_j;
	float* m = i + loop_j;
	float n = *l * *k;
	*m = n;
}

Compiling kernel:
extern "C" __global__ void kernel_name(float* a, float* b) {
	int loop_d = blockIdx.y;
	float* e = a + loop_d;
	float* f = b + loop_d;
	float g = 1.0 / *e;
	*f = g;
}

Compiling kernel:
extern "C" __global__ void kernel_name(float* a, float* b, float* c) {
	int loop_e = blockIdx.y;
	float* f = b + loop_e;
	float* g = c + loop_e;
	float h = *f + *a;
	*g = h;
}

Compiling kernel:
extern "C" __global__ void kernel_name(float* a, float* b) {
	int loop_d = blockIdx.y;
	float* e = a + loop_d;
	float* f = b + loop_d;
	float g = exp2(*e);
	*f = g;
}

Compiling kernel:
extern "C" __global__ void kernel_name(float* a, float* b, float* c) {
	int loop_e = blockIdx.y;
	float* f = b + loop_e;
	float* g = c + loop_e;
	float h = *f * *a;
	*g = h;
}

Compiling kernel:
extern "C" __global__ void kernel_name(float* a, float* b, float* c) {
	int loop_e = blockIdx.x;
	float* f = a + (4096*loop_e);
	int loop_g = blockIdx.y;
	float* h = b + loop_g;
	float* i = c + (114688*loop_g);
	int loop_j = blockIdx.z;
	float* k = f + loop_j;
	float* l = h + (14336*loop_j);
	float* m = i + loop_j;
	float n = *k * *l;
	*m = n;
}

Compiling kernel:
extern "C" __global__ void kernel_name(float* a, float* b, float* c) {
	int loop_e = blockIdx.y;
	float* f = b + loop_e;
	float* g = a + loop_e;
	float* h = c + loop_e;
	float i = *g * *f;
	*h = i;
}

